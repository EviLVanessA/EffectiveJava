1、①要尽可能地消除每一个非受检警告
   ②如果无法消除警告，同时可以证明引起警告的代码时类型安全的，只有在这种情况下，才可以用一个
     @SuppressWarnings("unchecked")注解来禁止这条警告。因此应该始终在尽可能小的范围内使
     用SuppressWarnings注解，永远不要使用在类上边
   ③每当使用@SuppressWarnings("unchecked")注解时，都要添加一条注释，说明这么做为什么是
     安全的
2、①数组是协变的(covariant)、可具体化的，泛型是不可变的、可以被擦除的 将数组替换位Array
   ②不能创建不可具体化(non-reifiable)的类型的数组
3、①为了获得最大限度的灵活性，要在表示生产者或者消费者的输入参数上使用通配符类型
   ②PECS producer-extends,consumer-super
   ③如果类型参数只在方法声明中出现一次，就可以用通配符取代它。如果是无限制的类型参数，就用无限制
     的通配符取代它，如果是有限制的类型参数，就用有限制的通配符取代它
4、①将值保存在泛型可变参数数组参数中是不安全的
   ②@SafeVarargs注解是通过方法的设计者做出承诺，声明这是类型安全的
   ③允许应一个方法访问另一个泛型可变参数数组是不安全的